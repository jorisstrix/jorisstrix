{
    "version": "2.0.0",
    "tasks": [
      {
        "label": "Install Dependencies",
        "type": "shell",
        "command": "npm install",
        "group": {
          "kind": "build",
          "isDefault": true
        },
        "problemMatcher": []
      },
      {
        "label": "Development Build",
        "type": "shell",
        "command": "npm run dev",
        "group": "build",
        "problemMatcher": [],
        "detail": "Builds the project for development."
      },
      {
        "label": "Production Build",
        "type": "shell",
        "command": "npm run build",
        "group": "build",
        "problemMatcher": [],
        "detail": "Builds the project for production."
      },
      {
        "label": "Run Tests",
        "type": "shell",
        "command": "npm test",
        "group": "test",
        "problemMatcher": [],
        "detail": "Runs the test suite."
      },
      {
        "label": "Run Linter",
        "type": "shell",
        "command": "npm run lint",
        "group": "test",
        "problemMatcher": [],
        "detail": "Runs the linter to check for code style issues."
      },
      {
        "label": "Git Pull",
        "type": "shell",
        "command": "git pull origin development",
        "problemMatcher": [],
        "detail": "Pulls the latest changes from the remote development branch."
      },
      {
        "label": "Git Commit",
        "type": "shell",
        "command": "git commit -m 'Commit message'",
        "problemMatcher": [],
        "detail": "Commits staged changes with a message.",
        "prompt": "Enter your commit message"
      },
      {
        "label": "Deploy to Production",
        "type": "shell",
        "command": "./deploy.sh",
        "problemMatcher": [],
        "detail": "Runs the production deployment script."
      },
      {
        "label": "Deploy to Staging",
        "type": "shell",
        "command": "./deploy-staging.sh",
        "problemMatcher": [],
        "detail": "Runs the staging deployment script."
      },
      {
        "label": "Docker Build",
        "type": "shell",
        "command": "docker build -t my-app .",
        "problemMatcher": [],
        "detail": "Builds the Docker image."
      },
      {
        "label": "Docker Run",
        "type": "shell",
        "command": "docker run -p 3000:3000 my-app",
        "problemMatcher": [],
        "detail": "Runs the Docker container."
      },
      {
        "label": "Docker Stop All",
        "type": "shell",
        "command": "docker stop $(docker ps -q)",
        "problemMatcher": [],
        "detail": "Stops all running Docker containers."
      }
    ]
  }
  